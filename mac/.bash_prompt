# Change the ls colors so that directories are white (i.e., NOT BLUE)
# echo "set colors"

export LS_COLORS='no=00:fi=00:di=01;37:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:'

# PROMPT ----------------------------------------------------------------------
#
#export PS1=[\u@\h \W]\$
#export PS1="\n*** \A \u@\h \w ***\n> "

PROMPT_COMMAND=build_prompt

check_success()
{
  if [ "$?" -eq 0 ]; then
    HIST_COLOR="$GREEN"
  else
    HIST_COLOR="$BOLD_RED"
  fi
}

parse_git_description()
{
  git describe 2> /dev/null  | sed -e 's/\(.*\)/ \[\1\]/'
}

parse_git_branch()
{
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \[\1\]/'
}

build_prompt()
{
  check_success
  gitBranch=$(parse_git_branch)
  if [ "$gitBranch" == " [(no branch)]" ]; then
    export PS1="\n($HIST_COLOR\!$BLACK) $CYAN\t $DARK_GREEN\u$BLACK@$DARK_GREEN\h$BLACK:$CYAN\w$BOLD_RED\$(parse_git_description)$BLACK\n\$ "
  else
    export PS1="\n($HIST_COLOR\!$BLACK) $CYAN\t $DARK_GREEN\u$BLACK@$DARK_GREEN\h$BLACK:$CYAN\w$BOLD_GREEN\$(parse_git_branch)$BLACK\n\$ "
  fi
}

# echo "define colors"

BLACK="\[\033[0m\]"
BOLD_BLACK="\[\033[1;30m\]"
RED="\[\033[0;31m\]"
BOLD_RED="\[\033[1;31m\]"
GREEN="\[\033[0;32m\]"
BOLD_GREEN="\[\033[1;32m\]"
YELLOW="\[\033[0;33m\]"
BOLD_YELLOW="\[\033[1;33m\]"
BLUE="\[\033[0;34m\]"
BOLD_BLUE="\[\033[1;34m\]"
MAUVE="\[\033[0;35m\]"
BOLD_MAUVE="\[\033[1;35m\]"
CYAN="\[\033[0;36m\]"
BOLD_CYAN="\[\033[1;36m\]"
WHITE="\[\033[0;37m\]"
DARK_GREEN="\[\033]0;\w\007\033[32m\]"


